---
# ------------------------------------------------------------------------------
# Sets up a data guard environment
# ------------------------------------------------------------------------------

# -------------------- Get available space for file system where the ORACLE_BASE
#                      is defined.

- name:                "Find file system mount point for {{ oracle_vars.oracle_base }}"
  set_fact:
    mount_point:       "{{(ansible_facts.mounts | selectattr('mount', 'in', oracle_vars.oracle_base) | list | sort(attribute='mount'))[-1]}}"

- name:                "Calculate amount of free space in GB for {{ oracle_vars.oracle_base }}"
  set_fact:
    space_available_in_gb: "{{ (mount_point.size_available | int / 1024 / 1024 / 1024) | round }}"

- name:                "Display free space (GB) for {{ oracle_vars.oracle_base }}"
  debug:
    var: space_available_in_gb

# -------------------- Include variables from Oracle User role

- name:                "Include variables from Oracle User role"
  include_vars:
    dir:               ../../oracle_user/vars
    files_matching:    main.yml

# --------------------- Refresh SQL scripts from GITHUB

- include_role:
    name:               common
    tasks_from:         clone_sql_ocm12c.yml

# --------------------- Get database status of standby nodes

- name:                 "Get database status of standby nodes"
  block:

  - name:               "Get database status of standby nodes"
    command:
      cmd:              "/bin/bash startup_standby_db.sh jar {{ oracle_vars.oracle_home }}"
      chdir:            "{{ git_repos_sql_ocm12c }}/Data Guard/Create a physical standby database"
    register:           startup_standby_db
    become:             yes
    become_user:        oracle
    changed_when:       false
    failed_when:        false
  
  - name:               "Show database status of standby nodes"
    debug:
      var:              startup_standby_db.stdout_lines
    when:               startup_standby_db is defined
  
  - name:               "Show error messages for database status of standby nodes"
    debug:
      var:              startup_standby_db.stderr_lines
    when:               startup_standby_db is defined
    
  when:                 data_guard_config["standby"]["host_name"] == inventory_hostname
  
# --------------------- The physical standby database is rebuilt if the control
#                       file cannot be found.

- name:                 "Rebuild physical standby database"
  block:
  
  - debug:
      msg:              "Physical standby database will be rebuilt"
    
  - name:               "Ensure there is enough free space for a backup of primary on both primary and standby servers"
    block:
    - name:             "Get size of primary database"
      command:
        cmd:            "/bin/bash get_database_size.sh jar {{ oracle_vars.oracle_home }}"
        chdir:          "{{ git_repos_sql_ocm12c }}/Data Guard/Create a physical standby database"
      register:         primary_db_size
      become:           yes
      become_user:      oracle
      changed_when:     false
      failed_when:      false
                        
    - name:             "Checks if there is enough space for a backup of the database on the primary"
      fail:
        msg:            "Insufficient space for a backup of the primary database"
      when:             primary_db_size.stdout | int > space_available_in_gb | int

    - name:             "Checks if there is enough space for the primary database on the standby"
      fail:
        msg:            "Insufficient space for a copy of the primary database"
      when:             primary_db_size.stdout | int > "hostvars[data_guard_config.standby.host_name].space_available_in_gb" | int
    
    when:               data_guard_config.primary.host_name == inventory_hostname

  - import_tasks:       rebuild_standby_db.yml
    
  when:                 hostvars[data_guard_config.standby.host_name].startup_standby_db.stderr_lines is search('ORA-00205')
...
