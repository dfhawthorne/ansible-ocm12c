---
# ------------------------------------------------------------------------------
# Configures cluster on first node only
# ------------------------------------------------------------------------------

- name:                 "Configure Cluster on first node only"
  block:

  - name:               "Set Facts for configuration of Cluster"
    set_fact:
      config_response_file:
                        "{{ oracle_gi.oracle_base }}/crs_config.rsp"
      config_loc:       "{{ oracle_gi.crs_home }}/crs/config"
      tool_response_file:    
                        "{{ oracle_gi.oracle_base }}/cfgrsp.properties"
      tool_loc:         "{{ oracle_gi.crs_home }}/cfgtoollogs"

  - name:               "Load Oracle User Password"
    include_vars:
      file:             oracle_pw.yml
      name:             oracle_file_pw

# --------------------- Create response file for silent CRS configuration

  - name:               "Create response file for silent CRS configuration"
    template:
      src:              "grid_install.rsp"
      dest:             "{{ config_response_file }}"
    vars:
      install_option:   "CRS_CONFIG"
      oracle_pw:
        SYSASMPassword: "{{ oracle_file_pw.SYSASMPassword }}"
        monitorPassword:
                        "{{ oracle_file_pw.monitorPassword }}"

# --------------------- Silently configure CRS on first node only

  - name:               "Silently configure CRS on first node only"
    command:            "{{ config_loc }}/config.sh -silent -responseFile {{ config_response_file }} -waitforcompletion -ignorePrereq"
    args:
      chdir:            "{{ config_loc }}"
    register:           gi_config_result
  
  - name:               "Output from Silently configure CRS on first node only"
    debug:
      var:              gi_config_result.stdout_lines
      verbosity:        0

  - name:               "Run root.sh on first node"
    command:            "{{ oracle_gi.crs_home }}/root.sh"
    register:           config_root_log
    when:               gi_config_result.stdout is search('root.sh')
    become:             yes
    become_user:        root

  - name:               "Output from root.sh script"
    debug:
      var:              config_root_log.stdout_lines
      verbosity:        0
    when:               config_root_log.stdout_lines is defined
      
# --------------------- Configure CRS Tools Silently

  - name:               "Configure CRS Tools Silently"
    block:
    - name:             "Create response file for silent tools configuration"
      template:
        src:            "cfgrsp.properties"
        dest:           "{{ tool_response_file }}"
      vars:
        oracle_pw:
          SYSASMPassword:
                        "{{ oracle_file_pw.SYSASMPassword }}"
          monitorPassword:
                        "{{ oracle_file_pw.monitorPassword }}"

    - name:             "Silently configure tools on first node only"
      command:          "/bin/sh {{ tool_loc }}/configToolAllCommands RESPONSE_FILE={{ tool_response_file }}"
      args:
        chdir:          "{{ tool_loc }}"
      register:         tool_config_result
  
    - name:             "Output from Silently configure tools on first node only"
      debug:
        var:            tool_config_result.stdout_lines
        verbosity:      0
    when:
    - gi_config_result is succeeded
    - gi_config_result.changed
    - config_root_log is succeeded
    - config_root_log.changed
  when:                 first_node
  become:               yes
  become_user:          oracle
  tags:                 config_crs

...
